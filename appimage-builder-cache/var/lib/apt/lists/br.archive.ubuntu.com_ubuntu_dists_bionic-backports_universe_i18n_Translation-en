Package: bird2
Description-md5: 874644189b6bd30d36505beb812c9640
Description-en: Internet Routing Daemon
 BIRD is an Internet routing daemon with full support for all the major
 routing protocols. It allows redistribution between protocols with a
 powerful route filtering syntax and an easy-to-use configuration
 interface.
 .
 BIRD supports IPv4 and IPv6 versions of OSPF, RIP, BGP and Babel routing
 protocols. It also supports supplementary protocols like BFD, RPKI-Router
 and IPv6 router advertisements.

Package: bird2-doc
Description-md5: 1ced61660e9937b21315d53a620aa063
Description-en: Internet Routing Daemon - documentation
 BIRD is an Internet routing daemon with full support for all the major
 routing protocols. It allows redistribution between protocols with a
 powerful route filtering syntax and an easy-to-use configuration
 interface.
 .
 This package provides the user and developer documentation.

Package: cockpit
Description-md5: 24b0aa0c07779dcba10e15ca9244d9e9
Description-en: Web Console for Linux servers
 The Cockpit Web Console enables users to administer GNU/Linux servers using a
 web browser.
 .
 It offers network configuration, log inspection, diagnostic reports, SELinux
 troubleshooting, interactive command-line sessions, and more.

Package: cockpit-bridge
Description-md5: 34419f40043aa83e9a0fb5968fe56ce7
Description-en: Cockpit bridge server-side component
 The Cockpit bridge component installed server side and runs commands on
 the system on behalf of the web based user interface.

Package: cockpit-dashboard
Description-md5: 1b1adf0b10d4d95da33a41c0d668cfd1
Description-en: Cockpit remote servers and dashboard
 Cockpit support for connecting to remote servers (through ssh)
 bastion hosts, and a basic dashboard.

Package: cockpit-doc
Description-md5: 917dc8f7798407683627da6ebb139a47
Description-en: Cockpit deployment and developer guide
 The Cockpit Deployment and Developer Guide shows sysadmins how to deploy
 Cockpit on their machines as well as helps developers who want to embed
 or extend Cockpit.

Package: cockpit-docker
Description-md5: c02e70ed63df0326f1a1b12deeb24144
Description-en: Cockpit user interface for Docker containers
 The Cockpit components for interacting with Docker and user interface.

Package: cockpit-machines
Description-md5: a902f6feddb06225624681441d26bc7d
Description-en: Cockpit user interface for virtual machines
 The Cockpit components for managing virtual machines.
 .
 If the "virtinst" package is installed, you can also create new virtual
 machines.

Package: cockpit-networkmanager
Description-md5: 3ec1a60ecda81a24c8267c56cf7a9a3f
Description-en: Cockpit user interface for networking
 The Cockpit components for interacting with networking configuration.

Package: cockpit-packagekit
Description-md5: 01ecbad973ab31bb91eb03019d4352aa
Description-en: Cockpit user interface for packages
 The Cockpit component for installing packages, via PackageKit.

Package: cockpit-pcp
Description-md5: 2bcebebdc8b56e2cd8c2ba8755912a8f
Description-en: Cockpit PCP integration
 Cockpit support for reading PCP metrics and loading PCP archives.

Package: cockpit-storaged
Description-md5: f6107ca2b49a2b554a0abcd9b73419c5
Description-en: Cockpit user interface for storage
 The Cockpit components for interacting with storage.

Package: cockpit-system
Description-md5: 305239ce7fcb5c6043156a1e54c69f73
Description-en: Cockpit admin interface for a system
 Cockpit admin interface package for configuring and
 troubleshooting a system.

Package: cockpit-tests
Description-md5: 0b4ed46aa862cd96d493b081c605101e
Description-en: Tests for Cockpit
 This package contains tests and files used while testing Cockpit.
 These files are not required for running Cockpit.

Package: cockpit-ws
Description-md5: f492a869e15f8c92004032f384bce124
Description-en: Cockpit Web Service
 The Cockpit Web Service listens on the network, and authenticates
 users.
 .
 Install sssd-dbus for supporting client certificate/smart card authentication
 via sssd/FreeIPA.

Package: dh-systemd
Description-md5: 67a68071a0cbbaa9df2bcd81ec5a29b1
Description-en: debhelper add-on to handle systemd unit files - transitional package
 This package is for transitional purposes and can be removed safely.

Package: elixir
Description-md5: 572fe6b3095250d25aa22e376bc0e13e
Description-en: functional meta-programming aware language
 Elixir is a functional meta-programming aware language intended primarily for
 developing distributed, fault-tolerant and scalable systems. Elixir source
 code is compiled to bytecode for the Erlang Virtual Machine (EVM), and can use
 Erlang libraries transparently.

Package: erlang
Description-md5: 444ffdeb0f4a95a7e36f20d18ac794cb
Description-en: Concurrent, real-time, distributed functional language
 Open Source Erlang is a functional programming language designed at
 the Ericsson Computer Science Laboratory.
 .
 Some of Erlang main features are:
  * Clear declarative syntax and is largely free from side-effects;
  * Built-in support for real-time, concurrent and distributed programming;
  * Designed for development of robust and continuously operated programs;
  * Dynamic code replacement at runtime.
 .
 The Erlang distribution also includes OTP (Open Telecom Platform) which
 provides a rich set of libraries and applications.
 .
 This package is a dummy package which will install Erlang/OTP runtime,
 applications, sources, code examples and the Erlang editing mode for Emacs.

Package: erlang-base-hipe
Description-md5: f284d6d86968208e4f53d14fca4279b8
Description-en: Erlang/OTP HiPE enabled virtual machine and base applications
 This package contains the Erlang/OTP runtime implementation, which is
 configured and built with HiPE support (allows compiling to native code),
 and minimal set of Erlang applications:
  compiler - compiles Erlang code to byte-code;
  erts - the Erlang runtime system application;
  kernel - code necessary to run the Erlang runtime system itself;
  ose - code for Enea OSE operating system;
  sasl - the system architecture support libraries application;
  stdlib - modules for manipulating lists, strings, files etc.

Package: erlang-common-test
Description-md5: 7b279934204d2fda3ee05f2ba5e002bb
Description-en: Erlang/OTP application for automated testing
 Common Test is a portable application for automated testing. It is
 suitable for black-box testing of target systems of any type (i.e.
 not necessarily implemented in Erlang), as well as for white-box
 testing of Erlang/OTP programs. Black-box testing is performed via
 standard interfaces (such as SNMP, HTTP, Corba, Telnet, etc) and,
 if required, via user specific interfaces (often called test ports).
 White-box testing of Erlang/OTP programs is easily accomplished by
 calling the target API functions directly from the test case functions.
 Common Test also integrates usage of the OTP cover tool for code
 coverage analysis of Erlang/OTP programs.

Package: erlang-debugger
Description-md5: f2a130c9024aae5b814aecc511de1716
Description-en: Erlang/OTP application for debugging and testing
 Debugger is a graphical tool which can be used for debugging and
 testing of Erlang programs. For example, breakpoints can be set,
 code can be single stepped and variable values can be inspected
 and modified.

Package: erlang-dialyzer
Description-md5: 64f3bbfb833c0a9582717bebe4d36557
Description-en: Erlang/OTP discrepancy analyzer application
 Dialyzer is a static analysis tool that identifies software
 discrepancies such as type errors, unreachable code, unnecessary
 tests etc. in single Erlang modules or entire (sets of) applications.

Package: erlang-et
Description-md5: 642600ae4ee7f6069393fa0af8f50037
Description-en: Erlang/OTP event tracer application
 The Event Tracer (ET) uses the built-in trace mechanism in Erlang
 and provides tools for collecting and examining trace data using GUI.

Package: erlang-jinterface
Description-md5: 6e3651f89f83062d26177557bb00ae3d
Description-en: Java communication tool to Erlang
 Jinterface Java package contains java classes, which help you
 integrate programs written in Java with Erlang.

Package: erlang-manpages
Description-md5: cdc7cc48bad4a582e48a14f54e037734
Description-en: Erlang/OTP manual pages
 Documentation for the Erlang programming language in `man' format. This
 documentation can be read using the command `erl -man mod', where `mod'
 is the name of the module you want documentation on.
 .
 This package contains all Erlang/OTP manual pages from sections other
 than 1. They document Erlang/OTP modules, config files and applications.

Package: erlang-mode
Description-md5: 458834bc6eb6df394adfd308669076f9
Description-en: Erlang major editing mode for Emacs
 This package includes the mode for editing Erlang programs in GNU Emacs.
 It is provided with the default Erlang/OTP distribution. It supports
 sophisticated indentation, syntax highlighting, electric commands,
 module name verification, comments, skeletons, tags etc.

Package: erlang-observer
Description-md5: 562a137fe6357e7dc7f07faca76776a1
Description-en: Erlang/OTP application for investigating distributed systems
 The OBSERVER application contains tools for tracing and investigation of
 distributed systems. They include etop - a tool for presenting information
 about Erlang processes, and crashdump_viewer - a HTML based tool for
 browsing Erlang crashdumps.

Package: erlang-reltool
Description-md5: c21e40c68ee2fb8795e6e8d59da14957
Description-en: Erlang/OTP release management tool
 Reltool is a release management tool. It analyses a given Erlang/OTP
 installation and determines dependencies between applications. The
 graphical frontend depicts the dependencies and enables interactive
 customization of a target system. The backend provides a batch
 interface for generation of customized target systems.

Package: erlang-src
Description-md5: 6a6a52b3019a4fbd9d35a8cde25c0477
Description-en: Erlang/OTP applications sources
 Erlang sources for all the applications in the Erlang/OTP system.
 They are useful for educational purpose and as a base for creating
 embedded systems.

Package: erlang-wx
Description-md5: 33737e962cd597aa89c0246f6ed16263
Description-en: Erlang/OTP bindings to wxWidgets
 The wxErlang application is an API for writing graphical user
 interfaces with wxWidgets.

Package: erlang-x11
Description-md5: 243a50ebbcb77b74596e0d11eccda5c3
Description-en: Erlang/OTP applications that require X Window System
 This package is a dummy package which will install all Erlang/OTP
 applications which use graphical interface and therefore require
 X Window System to run.

Package: ibus-avro
Description-md5: a4e45fc7e2170175e61ab6eef554298f
Description-en: IBus engine for Avro Phonetic
 ibus-avro is a port of the popular Avro Phonetic Bangla typing method
 to Linux. This software works as an Engine (plugin) of IBus and lets
 users type in English and on-the-fly transliterate them phonetically
 to Bangla.

Package: python-hvac
Description-md5: d73f21e1c413b6aeb6fe1c1849673d2d
Description-en: Python 2 client library for Hashicorp Vault
 HVAC allows accessing secrets stored in a Vault directly from
 Python code.
 .
 An access token must be created first, using a separate tool
 like vault or vault-client.
 .
 This is the Python 2 version of the package.

Package: python3-hvac
Description-md5: 87f3d1dc985dc89bc5ba925dedb0e579
Description-en: Python 3 client library for Hashicorp Vault
 HVAC allows accessing secrets stored in a Vault directly from
 Python code.
 .
 An access token must be created first, using a separate tool
 like vault or vault-client.
 .
 This is the Python 3 version of the package.

Package: vaultlocker
Description-md5: e37e36f80e101bcee84aea29c108bcba
Description-en: Secure storage of dm-crypt keys in Hashicorp Vault
 vaultlocker provides a way to store and retrieve dm-crypt encryption
 keys in Vault, automatically retrieving keys and opening LUKS dm-crypt
 devices on boot.

